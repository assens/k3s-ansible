apiVersion: coherence.oracle.com/v1
kind: Coherence
metadata:
  name: imdg
  namespace: coherence
spec:
  replicas: 3
  cluster: imdg
  #image: ghcr.io/oracle/coherence-ce:24.09
  image: repository.azdio-tv.com/com.egt.digital.plafrom.services/coherence-cluster-node:24.09.2.1-SNAPSHOT-amd64
  imagePullPolicy: Always
  application:
    main: com.egt.digital.platform.services.coherence.CoherenceClusterNodeApplication
  imagePullSecrets:  
   - name: docker-registry-credentials
  jvm:
    args:
      - "-XX:-UseG1GC"
      - "-XX:+UseZGC"
      - "-XX:ZUncommitDelay=30"
      - "-XX:+ZGenerational"
      - "-Djava.net.preferIPv4Stack=true"
      - "--add-opens java.base/java.io=ALL-UNNAMED"
      - "--add-opens java.base/java.lang=ALL-UNNAMED"
      - "-Dserver.port=8888"
    memory:
      initialRAMPercentage: 10
      minRAMPercentage: 5
      maxRAMPercentage: 80
  coherence:
    cacheConfig: /app/resources/coherence-cache-config-kafka.xml
    #overrideConfig: tangosol-coherence-override.xml
    storageEnabled: true
    management:
      enabled: true
    logLevel: 9
    persistence:
      mode: active
      persistentVolumeClaim:     
        #storageClassName: ceph-rbd
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
      snapshots:
        persistentVolumeClaim:
          accessModes:
            - ReadWriteOnce
          resources:  
            requests:
              storage: 5Gi
    metrics:
      enabled: true 
  env:
    - name: "COHERENCE_METRICS_LEGACY_NAMES"
      value: "false"
  ports:
    - name: management
      port: 30000
    - name: extend-http
      port: 8080
    - name: extend-tcp
      port: 9090
    - name: metrics
      serviceMonitor:
        enabled: true
  initResources:           
    requests:
      memory: "64Mi"
      cpu: "250m"
    limits:
      memory: "128Mi"
      cpu: "500m"
  resources:
      requests:
        memory: "8G"
        #cpu: "250m"
      limits:
        memory: "16G"
        #cpu: "500m"

